#!/bin/bash

if [[ $# != 1 ]]; then 
  echo "usage: badown 'url'"
  exit 1
fi
function url_str {
  echo $1\
    | awk '{gsub("-","+"); gsub("_","/"); gsub(",",""); print}'
}
function json_req {
  wget -q -O- --post-data="$1" --header='Content-Type:application/json' "https://g.api.mega.co.nz/cs$2"
}
function key_solver {
  echo -n $1 \
    | base64 --decode --ignore-garbage \
    2> /dev/null \
    | xxd -p \
    | tr -d '\n'
}
function json_post {
  echo $2\
    | awk -v c=$1 -F'"' '{for(i = 1; i <= NF; i++)
  {if($i==c)
    if((c=="t")||(c=="s")||(c=="ts")) 
      {gsub(/[[:punct:]]/,"",$(i+1));print $(i+1);}
    else
      {print $(i+2);}
    }
  }'
}
function key_dec {
  local var=$(key_solver "$(url_str $key)")
  echo $(url_str $1)\
    | openssl enc -a -d -A -aes-128-ecb -K $var -iv "00000000000000000000000000000000" -nopad \
    2> /dev/null \
    | base64
}
function size {
  local i=0
  local var=$1
  local pad=$(((4-${#var}%4)%4))
  for i in $(seq 1 $pad); do
    var="$var="
  done
  echo $var
}
function meta_dec_key {
  local var
  var[0]=$(( 0x${1:00:16} ^ 0x${1:32:16} ))
  var[1]=$(( 0x${1:16:16} ^ 0x${1:48:16} ))
  meta_key=$(printf "%016x" ${var[*]})
  meta_iv="${1:32:16}0000000000000000"
}
function meta_dec {
  echo -n $2 \
    | openssl enc -a -A -d -aes-128-cbc -K $1 -iv "00000000000000000000000000000000" -nopad \
    | tr -d '\0' \
    2> /dev/null
}
function file_downdec {
  wget -O "$2".tmp  -q --show-progress "$1" 
  cat "$2.tmp" \
    | openssl enc -d -aes-128-ctr -K $3 -iv $4 \
    > "$2"
  rm -f "$2".tmp
}
function file_down {
  wget -O "$2".tmp -q --show-progress "$1"
  mv "$2".tmp "$2"
  rm -f "$2".tmp
}
function mega {
  id=`echo $1 | awk -F '!' '{print $2}'`
  key=`echo $1 | awk -F '!' '{print $3}'`
  fld=`echo $1 | awk -F '!' '{print $1}'`

  if [ "${fld: -1}" == "F" ];then
    json_req '[{"a":"f","c":1,"ca":1,"r":1}]' "?id=&n=$id" > .badown.tmp
    if [[ $(file .badown.tmp) == *"gzip"* ]]; then response1=$(cat .badown.tmp | gunzip); else response1=$(cat .badown.tmp); fi
    keys=($(json_post 'k' $response1 | awk -F':' '{print $2}'))
    names=($(json_post 'h' $response1 ))
    types=($(json_post 't' $response1 ))
    attrs=($(json_post 'a' $response1 ))
    sizes=($(json_post 's' $response1 ))
    j=0
    time=$(date +%s)
    mkdir "megafolder$time"
    ovallsize=0; downsize=0
    for i in $(seq 0 $((${#sizes[@]}-1)));do ((ovallsize+=${sizes[i]}));done
    for i in $(seq 0 $((${#types[@]}-1)));do 
      if [ ${types[i]} == 0 ];then 
	file_url=$(json_post 'g' $(json_req "[{\"a\":\"g\",\"g\":1,\"n\":\"${names[i]}\"}]" "?id=&n=$id"))
	meta_dec_key "$(key_solver $(key_dec $(size ${keys[i]})))"
	file_name="$(json_post 'n' "$(meta_dec $meta_key $(size $(url_str ${attrs[i]})))")"
	file_downdec $file_url "$file_name" $meta_key $meta_iv 
	((downsize+=${sizes[j]}))
	echo $j'/'$((${#sizes[@]} - 1))' - '$downsize'/'$ovallsize
	((j++))
	mv  "$file_name" "$PWD/megafolder$time"/
      fi
    done
  elif [ "${fld: -1}" == "#" ];then
    meta_dec_key $(key_solver $(url_str $key))
    name_key=$(url_str $(json_post 'at' $(json_req "[{\"a\":\"g\", \"p\":\"$id\"}]" '?id=&ak=')))
    file_name="$(json_post 'n' "$(meta_dec $meta_key $(size $name_key))")"
    file_url=$(json_post 'g' $(json_req "[{\"a\":\"g\",\"g\":1,\"p\":\"$id\"}]" '?'))
    file_downdec $file_url "$file_name" $meta_key $meta_iv 
  fi
}
function zippyshare { 
  wget -q -O .badown.tmp $1
  var0=$(echo $1 \
    | awk -F".com" '{print $1".com"}')
  var1=( $(cat .badown.tmp \
    | grep -B1 dlbutton \
    | grep href \
    | awk -F'"' '{for(i = 1; i <= NF; i++) {if ($i ~ /\//) {print $i}}}') )
  var2=$(cat .badown.tmp \
    | grep -B1 dlbutton \
    | grep var \
    | awk '{print $NF}')
  file_url=$(echo $var0 ${var1[0]} $(( ${var2::-1} )) ${var1[1]} | tr -d ' ')
  file_name=$(echo ${file_url##*/} | while read; do echo -e ${REPLY//%/\\x}; done)
  file_down $file_url $file_name
}
function mediafire {
  file_url=$(wget -q -O- $1 \
    | grep -C 3 'class="download_link"' \
    | grep 'kNO = ' \
    | awk -F'"' '{print $2}')
  file_name=$(echo ${1##*/} | while read; do echo -e ${REPLY//%/\\x}; done)
  file_down $file_url $file_name
}
if [[ "$1" == *"mega"* ]];then
  mega "$1"
elif [[ "$1" == *"zippyshare"* ]];then
  zippyshare "$1"
elif [[ "$1" == *"mediafire"* ]];then
  mediafire "$1"
else
  echo "usage: badown 'url'"
  echo "  the url must be from mega, zippyshare or mediafire."
  exit 1
fi
